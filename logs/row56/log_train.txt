==========
Args:Namespace(arch='ap3dres50', dataset='mars', distance='hist_intersect', eval_step=10, gamma=0.1, gpu='0', height=256, lr=0.0003, margin=0.3, max_epoch=240, num_instances=4, pretrain='/home/shamgholi/iust/ap3d50_best_model.pth.tar', resume='', root='/home/shamgholi/iust/datasets/', sample_stride=8, save_dir='./logs/row56', seed=1, seq_len=4, start_epoch=0, start_eval=0, stepsize=[60, 120, 180], test_batch=32, train_batch=32, use_cpu=False, weight_decay=0.0005, width=128, workers=4)
==========
Currently using GPU 0
Initializing dataset mars
=> MARS loaded
Dataset statistics:
  ------------------------------
  subset   | # ids | # tracklets
  ------------------------------
  train    |   625 |     8298
  query    |   626 |     1980
  gallery  |   622 |     9330
  ------------------------------
  total    |  1247 |    19608
  number of images per tracklet: 2 ~ 920, average 59.5
  ------------------------------
Initializing model: ap3dres50
Model size: 31.99358M
--------------------
RUNTIMEERROR IN LOADING BATCHNORM STATEDICT, WEIGHTS OF BN IS NOW RANDOM
--------------------
pretrain state dict loaded
----------
model layers:
ResNet503D(
  (conv1): Conv3d(3, 64, kernel_size=(1, 7, 7), stride=(1, 2, 2), padding=(0, 3, 3), bias=False)
  (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (relu): ReLU(inplace=True)
  (maxpool): MaxPool3d(kernel_size=(1, 3, 3), stride=(1, 2, 2), padding=(0, 1, 1), dilation=(1, 1, 1), ceil_mode=False)
  (layer1): Sequential(
    (0): Bottleneck3D(
      (conv1): Conv3d(64, 64, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv3d(64, 64, kernel_size=(1, 3, 3), stride=(1, 1, 1), padding=(0, 1, 1), bias=False)
      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv3d(64, 256, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
      (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (downsample): Sequential(
        (0): Conv3d(64, 256, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
        (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (1): Bottleneck3D(
      (conv1): Conv3d(256, 64, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv3d(64, 64, kernel_size=(1, 3, 3), stride=(1, 1, 1), padding=(0, 1, 1), bias=False)
      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv3d(64, 256, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
      (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
    )
    (2): Bottleneck3D(
      (conv1): Conv3d(256, 64, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv3d(64, 64, kernel_size=(1, 3, 3), stride=(1, 1, 1), padding=(0, 1, 1), bias=False)
      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv3d(64, 256, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
      (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
    )
  )
  (layer2): Sequential(
    (0): Bottleneck3D(
      (conv1): Conv3d(256, 128, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
      (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): APP3DC(
        (APM): APM(
          (padding): ConstantPad3d(padding=(0, 0, 0, 0, 1, 1), value=0)
          (semantic_mapping): Conv3d(128, 8, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
          (x_mapping): Conv3d(128, 8, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
          (n_mapping): Conv3d(128, 8, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
          (contrastive_att_net): Sequential(
            (0): Conv3d(8, 1, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
            (1): Sigmoid()
          )
        )
        (spatial_conv3d): Conv3d(128, 128, kernel_size=(1, 3, 3), stride=(1, 2, 2), padding=(0, 1, 1), bias=False)
        (temporal_conv3d): Conv3d(128, 128, kernel_size=(3, 1, 1), stride=(3, 1, 1), bias=False)
      )
      (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv3d(128, 512, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
      (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (downsample): Sequential(
        (0): Conv3d(256, 512, kernel_size=(1, 1, 1), stride=(1, 2, 2), bias=False)
        (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (1): Bottleneck3D(
      (conv1): Conv3d(512, 128, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
      (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv3d(128, 128, kernel_size=(1, 3, 3), stride=(1, 1, 1), padding=(0, 1, 1), bias=False)
      (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv3d(128, 512, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
      (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
    )
    (2): Bottleneck3D(
      (conv1): Conv3d(512, 128, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
      (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): APP3DC(
        (APM): APM(
          (padding): ConstantPad3d(padding=(0, 0, 0, 0, 1, 1), value=0)
          (semantic_mapping): Conv3d(128, 8, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
          (x_mapping): Conv3d(128, 8, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
          (n_mapping): Conv3d(128, 8, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
          (contrastive_att_net): Sequential(
            (0): Conv3d(8, 1, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
            (1): Sigmoid()
          )
        )
        (spatial_conv3d): Conv3d(128, 128, kernel_size=(1, 3, 3), stride=(1, 1, 1), padding=(0, 1, 1), bias=False)
        (temporal_conv3d): Conv3d(128, 128, kernel_size=(3, 1, 1), stride=(3, 1, 1), bias=False)
      )
      (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv3d(128, 512, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
      (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
    )
    (3): Bottleneck3D(
      (conv1): Conv3d(512, 128, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
      (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv3d(128, 128, kernel_size=(1, 3, 3), stride=(1, 1, 1), padding=(0, 1, 1), bias=False)
      (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv3d(128, 512, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
      (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
    )
  )
  (layer3): Sequential(
    (0): Bottleneck3D(
      (conv1): Conv3d(512, 256, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): APP3DC(
        (APM): APM(
          (padding): ConstantPad3d(padding=(0, 0, 0, 0, 1, 1), value=0)
          (semantic_mapping): Conv3d(256, 16, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
          (x_mapping): Conv3d(256, 16, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
          (n_mapping): Conv3d(256, 16, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
          (contrastive_att_net): Sequential(
            (0): Conv3d(16, 1, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
            (1): Sigmoid()
          )
        )
        (spatial_conv3d): Conv3d(256, 256, kernel_size=(1, 3, 3), stride=(1, 2, 2), padding=(0, 1, 1), bias=False)
        (temporal_conv3d): Conv3d(256, 256, kernel_size=(3, 1, 1), stride=(3, 1, 1), bias=False)
      )
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv3d(256, 1024, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
      (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (downsample): Sequential(
        (0): Conv3d(512, 1024, kernel_size=(1, 1, 1), stride=(1, 2, 2), bias=False)
        (1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (1): Bottleneck3D(
      (conv1): Conv3d(1024, 256, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv3d(256, 256, kernel_size=(1, 3, 3), stride=(1, 1, 1), padding=(0, 1, 1), bias=False)
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv3d(256, 1024, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
      (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
    )
    (2): Bottleneck3D(
      (conv1): Conv3d(1024, 256, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): APP3DC(
        (APM): APM(
          (padding): ConstantPad3d(padding=(0, 0, 0, 0, 1, 1), value=0)
          (semantic_mapping): Conv3d(256, 16, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
          (x_mapping): Conv3d(256, 16, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
          (n_mapping): Conv3d(256, 16, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
          (contrastive_att_net): Sequential(
            (0): Conv3d(16, 1, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
            (1): Sigmoid()
          )
        )
        (spatial_conv3d): Conv3d(256, 256, kernel_size=(1, 3, 3), stride=(1, 1, 1), padding=(0, 1, 1), bias=False)
        (temporal_conv3d): Conv3d(256, 256, kernel_size=(3, 1, 1), stride=(3, 1, 1), bias=False)
      )
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv3d(256, 1024, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
      (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
    )
    (3): Bottleneck3D(
      (conv1): Conv3d(1024, 256, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv3d(256, 256, kernel_size=(1, 3, 3), stride=(1, 1, 1), padding=(0, 1, 1), bias=False)
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv3d(256, 1024, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
      (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
    )
    (4): Bottleneck3D(
      (conv1): Conv3d(1024, 256, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): APP3DC(
        (APM): APM(
          (padding): ConstantPad3d(padding=(0, 0, 0, 0, 1, 1), value=0)
          (semantic_mapping): Conv3d(256, 16, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
          (x_mapping): Conv3d(256, 16, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
          (n_mapping): Conv3d(256, 16, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
          (contrastive_att_net): Sequential(
            (0): Conv3d(16, 1, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
            (1): Sigmoid()
          )
        )
        (spatial_conv3d): Conv3d(256, 256, kernel_size=(1, 3, 3), stride=(1, 1, 1), padding=(0, 1, 1), bias=False)
        (temporal_conv3d): Conv3d(256, 256, kernel_size=(3, 1, 1), stride=(3, 1, 1), bias=False)
      )
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv3d(256, 1024, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
      (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
    )
    (5): Bottleneck3D(
      (conv1): Conv3d(1024, 256, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv3d(256, 256, kernel_size=(1, 3, 3), stride=(1, 1, 1), padding=(0, 1, 1), bias=False)
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv3d(256, 1024, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
      (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
    )
  )
  (layer4): Sequential(
    (0): Bottleneck3D(
      (conv1): Conv3d(1024, 512, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
      (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv3d(512, 512, kernel_size=(1, 3, 3), stride=(1, 1, 1), padding=(0, 1, 1), bias=False)
      (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv3d(512, 2048, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
      (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (downsample): Sequential(
        (0): Conv3d(1024, 2048, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
        (1): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (1): Bottleneck3D(
      (conv1): Conv3d(2048, 512, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
      (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv3d(512, 512, kernel_size=(1, 3, 3), stride=(1, 1, 1), padding=(0, 1, 1), bias=False)
      (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv3d(512, 2048, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
      (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
    )
    (2): Bottleneck3D(
      (conv1): Conv3d(2048, 512, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
      (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv3d(512, 512, kernel_size=(1, 3, 3), stride=(1, 1, 1), padding=(0, 1, 1), bias=False)
      (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv3d(512, 2048, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
      (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
    )
  )
  (hist): HistYusufLayer(
    (conv_centers): Conv2d(2048, 12288, kernel_size=(1, 1), stride=(1, 1), groups=2048)
    (conv_widths): Conv2d(12288, 12288, kernel_size=(1, 1), stride=(1, 1), groups=12288)
    (relu1): Threshold(threshold=1.0, value=0.0)
    (gap): AdaptiveAvgPool2d(output_size=1)
  )
  (bn): BatchNorm1d(12288, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (classifier): Linear(in_features=12288, out_features=625, bias=True)
)
Model size: 31.99358M
>>> module module.conv1.weight is trainable ? False, device: cuda:0
>>> module module.bn1.weight is trainable ? False, device: cuda:0
>>> module module.bn1.bias is trainable ? False, device: cuda:0
>>> module module.layer1.0.conv1.weight is trainable ? False, device: cuda:0
>>> module module.layer1.0.bn1.weight is trainable ? False, device: cuda:0
>>> module module.layer1.0.bn1.bias is trainable ? False, device: cuda:0
>>> module module.layer1.0.conv2.weight is trainable ? False, device: cuda:0
>>> module module.layer1.0.bn2.weight is trainable ? False, device: cuda:0
>>> module module.layer1.0.bn2.bias is trainable ? False, device: cuda:0
>>> module module.layer1.0.conv3.weight is trainable ? False, device: cuda:0
>>> module module.layer1.0.bn3.weight is trainable ? False, device: cuda:0
>>> module module.layer1.0.bn3.bias is trainable ? False, device: cuda:0
>>> module module.layer1.0.downsample.0.weight is trainable ? False, device: cuda:0
>>> module module.layer1.0.downsample.1.weight is trainable ? False, device: cuda:0
>>> module module.layer1.0.downsample.1.bias is trainable ? False, device: cuda:0
>>> module module.layer1.1.conv1.weight is trainable ? False, device: cuda:0
>>> module module.layer1.1.bn1.weight is trainable ? False, device: cuda:0
>>> module module.layer1.1.bn1.bias is trainable ? False, device: cuda:0
>>> module module.layer1.1.conv2.weight is trainable ? False, device: cuda:0
>>> module module.layer1.1.bn2.weight is trainable ? False, device: cuda:0
>>> module module.layer1.1.bn2.bias is trainable ? False, device: cuda:0
>>> module module.layer1.1.conv3.weight is trainable ? False, device: cuda:0
>>> module module.layer1.1.bn3.weight is trainable ? False, device: cuda:0
>>> module module.layer1.1.bn3.bias is trainable ? False, device: cuda:0
>>> module module.layer1.2.conv1.weight is trainable ? False, device: cuda:0
>>> module module.layer1.2.bn1.weight is trainable ? False, device: cuda:0
>>> module module.layer1.2.bn1.bias is trainable ? False, device: cuda:0
>>> module module.layer1.2.conv2.weight is trainable ? False, device: cuda:0
>>> module module.layer1.2.bn2.weight is trainable ? False, device: cuda:0
>>> module module.layer1.2.bn2.bias is trainable ? False, device: cuda:0
>>> module module.layer1.2.conv3.weight is trainable ? False, device: cuda:0
>>> module module.layer1.2.bn3.weight is trainable ? False, device: cuda:0
>>> module module.layer1.2.bn3.bias is trainable ? False, device: cuda:0
>>> module module.layer2.0.conv1.weight is trainable ? False, device: cuda:0
>>> module module.layer2.0.bn1.weight is trainable ? False, device: cuda:0
>>> module module.layer2.0.bn1.bias is trainable ? False, device: cuda:0
>>> module module.layer2.0.conv2.APM.semantic_mapping.weight is trainable ? False, device: cuda:0
>>> module module.layer2.0.conv2.APM.x_mapping.weight is trainable ? False, device: cuda:0
>>> module module.layer2.0.conv2.APM.n_mapping.weight is trainable ? False, device: cuda:0
>>> module module.layer2.0.conv2.APM.contrastive_att_net.0.weight is trainable ? False, device: cuda:0
>>> module module.layer2.0.conv2.spatial_conv3d.weight is trainable ? False, device: cuda:0
>>> module module.layer2.0.conv2.temporal_conv3d.weight is trainable ? False, device: cuda:0
>>> module module.layer2.0.bn2.weight is trainable ? False, device: cuda:0
>>> module module.layer2.0.bn2.bias is trainable ? False, device: cuda:0
>>> module module.layer2.0.conv3.weight is trainable ? False, device: cuda:0
>>> module module.layer2.0.bn3.weight is trainable ? False, device: cuda:0
>>> module module.layer2.0.bn3.bias is trainable ? False, device: cuda:0
>>> module module.layer2.0.downsample.0.weight is trainable ? False, device: cuda:0
>>> module module.layer2.0.downsample.1.weight is trainable ? False, device: cuda:0
>>> module module.layer2.0.downsample.1.bias is trainable ? False, device: cuda:0
>>> module module.layer2.1.conv1.weight is trainable ? False, device: cuda:0
>>> module module.layer2.1.bn1.weight is trainable ? False, device: cuda:0
>>> module module.layer2.1.bn1.bias is trainable ? False, device: cuda:0
>>> module module.layer2.1.conv2.weight is trainable ? False, device: cuda:0
>>> module module.layer2.1.bn2.weight is trainable ? False, device: cuda:0
>>> module module.layer2.1.bn2.bias is trainable ? False, device: cuda:0
>>> module module.layer2.1.conv3.weight is trainable ? False, device: cuda:0
>>> module module.layer2.1.bn3.weight is trainable ? False, device: cuda:0
>>> module module.layer2.1.bn3.bias is trainable ? False, device: cuda:0
>>> module module.layer2.2.conv1.weight is trainable ? False, device: cuda:0
>>> module module.layer2.2.bn1.weight is trainable ? False, device: cuda:0
>>> module module.layer2.2.bn1.bias is trainable ? False, device: cuda:0
>>> module module.layer2.2.conv2.APM.semantic_mapping.weight is trainable ? False, device: cuda:0
>>> module module.layer2.2.conv2.APM.x_mapping.weight is trainable ? False, device: cuda:0
>>> module module.layer2.2.conv2.APM.n_mapping.weight is trainable ? False, device: cuda:0
>>> module module.layer2.2.conv2.APM.contrastive_att_net.0.weight is trainable ? False, device: cuda:0
>>> module module.layer2.2.conv2.spatial_conv3d.weight is trainable ? False, device: cuda:0
>>> module module.layer2.2.conv2.temporal_conv3d.weight is trainable ? False, device: cuda:0
>>> module module.layer2.2.bn2.weight is trainable ? False, device: cuda:0
>>> module module.layer2.2.bn2.bias is trainable ? False, device: cuda:0
>>> module module.layer2.2.conv3.weight is trainable ? False, device: cuda:0
>>> module module.layer2.2.bn3.weight is trainable ? False, device: cuda:0
>>> module module.layer2.2.bn3.bias is trainable ? False, device: cuda:0
>>> module module.layer2.3.conv1.weight is trainable ? False, device: cuda:0
>>> module module.layer2.3.bn1.weight is trainable ? False, device: cuda:0
>>> module module.layer2.3.bn1.bias is trainable ? False, device: cuda:0
>>> module module.layer2.3.conv2.weight is trainable ? False, device: cuda:0
>>> module module.layer2.3.bn2.weight is trainable ? False, device: cuda:0
>>> module module.layer2.3.bn2.bias is trainable ? False, device: cuda:0
>>> module module.layer2.3.conv3.weight is trainable ? False, device: cuda:0
>>> module module.layer2.3.bn3.weight is trainable ? False, device: cuda:0
>>> module module.layer2.3.bn3.bias is trainable ? False, device: cuda:0
>>> module module.layer3.0.conv1.weight is trainable ? False, device: cuda:0
>>> module module.layer3.0.bn1.weight is trainable ? False, device: cuda:0
>>> module module.layer3.0.bn1.bias is trainable ? False, device: cuda:0
>>> module module.layer3.0.conv2.APM.semantic_mapping.weight is trainable ? False, device: cuda:0
>>> module module.layer3.0.conv2.APM.x_mapping.weight is trainable ? False, device: cuda:0
>>> module module.layer3.0.conv2.APM.n_mapping.weight is trainable ? False, device: cuda:0
>>> module module.layer3.0.conv2.APM.contrastive_att_net.0.weight is trainable ? False, device: cuda:0
>>> module module.layer3.0.conv2.spatial_conv3d.weight is trainable ? False, device: cuda:0
>>> module module.layer3.0.conv2.temporal_conv3d.weight is trainable ? False, device: cuda:0
>>> module module.layer3.0.bn2.weight is trainable ? False, device: cuda:0
>>> module module.layer3.0.bn2.bias is trainable ? False, device: cuda:0
>>> module module.layer3.0.conv3.weight is trainable ? False, device: cuda:0
>>> module module.layer3.0.bn3.weight is trainable ? False, device: cuda:0
>>> module module.layer3.0.bn3.bias is trainable ? False, device: cuda:0
>>> module module.layer3.0.downsample.0.weight is trainable ? False, device: cuda:0
>>> module module.layer3.0.downsample.1.weight is trainable ? False, device: cuda:0
>>> module module.layer3.0.downsample.1.bias is trainable ? False, device: cuda:0
>>> module module.layer3.1.conv1.weight is trainable ? False, device: cuda:0
>>> module module.layer3.1.bn1.weight is trainable ? False, device: cuda:0
>>> module module.layer3.1.bn1.bias is trainable ? False, device: cuda:0
>>> module module.layer3.1.conv2.weight is trainable ? False, device: cuda:0
>>> module module.layer3.1.bn2.weight is trainable ? False, device: cuda:0
>>> module module.layer3.1.bn2.bias is trainable ? False, device: cuda:0
>>> module module.layer3.1.conv3.weight is trainable ? False, device: cuda:0
>>> module module.layer3.1.bn3.weight is trainable ? False, device: cuda:0
>>> module module.layer3.1.bn3.bias is trainable ? False, device: cuda:0
>>> module module.layer3.2.conv1.weight is trainable ? False, device: cuda:0
>>> module module.layer3.2.bn1.weight is trainable ? False, device: cuda:0
>>> module module.layer3.2.bn1.bias is trainable ? False, device: cuda:0
>>> module module.layer3.2.conv2.APM.semantic_mapping.weight is trainable ? False, device: cuda:0
>>> module module.layer3.2.conv2.APM.x_mapping.weight is trainable ? False, device: cuda:0
>>> module module.layer3.2.conv2.APM.n_mapping.weight is trainable ? False, device: cuda:0
>>> module module.layer3.2.conv2.APM.contrastive_att_net.0.weight is trainable ? False, device: cuda:0
>>> module module.layer3.2.conv2.spatial_conv3d.weight is trainable ? False, device: cuda:0
>>> module module.layer3.2.conv2.temporal_conv3d.weight is trainable ? False, device: cuda:0
>>> module module.layer3.2.bn2.weight is trainable ? False, device: cuda:0
>>> module module.layer3.2.bn2.bias is trainable ? False, device: cuda:0
>>> module module.layer3.2.conv3.weight is trainable ? False, device: cuda:0
>>> module module.layer3.2.bn3.weight is trainable ? False, device: cuda:0
>>> module module.layer3.2.bn3.bias is trainable ? False, device: cuda:0
>>> module module.layer3.3.conv1.weight is trainable ? False, device: cuda:0
>>> module module.layer3.3.bn1.weight is trainable ? False, device: cuda:0
>>> module module.layer3.3.bn1.bias is trainable ? False, device: cuda:0
>>> module module.layer3.3.conv2.weight is trainable ? False, device: cuda:0
>>> module module.layer3.3.bn2.weight is trainable ? False, device: cuda:0
>>> module module.layer3.3.bn2.bias is trainable ? False, device: cuda:0
>>> module module.layer3.3.conv3.weight is trainable ? False, device: cuda:0
>>> module module.layer3.3.bn3.weight is trainable ? False, device: cuda:0
>>> module module.layer3.3.bn3.bias is trainable ? False, device: cuda:0
>>> module module.layer3.4.conv1.weight is trainable ? False, device: cuda:0
>>> module module.layer3.4.bn1.weight is trainable ? False, device: cuda:0
>>> module module.layer3.4.bn1.bias is trainable ? False, device: cuda:0
>>> module module.layer3.4.conv2.APM.semantic_mapping.weight is trainable ? False, device: cuda:0
>>> module module.layer3.4.conv2.APM.x_mapping.weight is trainable ? False, device: cuda:0
>>> module module.layer3.4.conv2.APM.n_mapping.weight is trainable ? False, device: cuda:0
>>> module module.layer3.4.conv2.APM.contrastive_att_net.0.weight is trainable ? False, device: cuda:0
>>> module module.layer3.4.conv2.spatial_conv3d.weight is trainable ? False, device: cuda:0
>>> module module.layer3.4.conv2.temporal_conv3d.weight is trainable ? False, device: cuda:0
>>> module module.layer3.4.bn2.weight is trainable ? False, device: cuda:0
>>> module module.layer3.4.bn2.bias is trainable ? False, device: cuda:0
>>> module module.layer3.4.conv3.weight is trainable ? False, device: cuda:0
>>> module module.layer3.4.bn3.weight is trainable ? False, device: cuda:0
>>> module module.layer3.4.bn3.bias is trainable ? False, device: cuda:0
>>> module module.layer3.5.conv1.weight is trainable ? False, device: cuda:0
>>> module module.layer3.5.bn1.weight is trainable ? False, device: cuda:0
>>> module module.layer3.5.bn1.bias is trainable ? False, device: cuda:0
>>> module module.layer3.5.conv2.weight is trainable ? False, device: cuda:0
>>> module module.layer3.5.bn2.weight is trainable ? False, device: cuda:0
>>> module module.layer3.5.bn2.bias is trainable ? False, device: cuda:0
>>> module module.layer3.5.conv3.weight is trainable ? False, device: cuda:0
>>> module module.layer3.5.bn3.weight is trainable ? False, device: cuda:0
>>> module module.layer3.5.bn3.bias is trainable ? False, device: cuda:0
>>> module module.layer4.0.conv1.weight is trainable ? False, device: cuda:0
>>> module module.layer4.0.bn1.weight is trainable ? False, device: cuda:0
>>> module module.layer4.0.bn1.bias is trainable ? False, device: cuda:0
>>> module module.layer4.0.conv2.weight is trainable ? False, device: cuda:0
>>> module module.layer4.0.bn2.weight is trainable ? False, device: cuda:0
>>> module module.layer4.0.bn2.bias is trainable ? False, device: cuda:0
>>> module module.layer4.0.conv3.weight is trainable ? False, device: cuda:0
>>> module module.layer4.0.bn3.weight is trainable ? False, device: cuda:0
>>> module module.layer4.0.bn3.bias is trainable ? False, device: cuda:0
>>> module module.layer4.0.downsample.0.weight is trainable ? False, device: cuda:0
>>> module module.layer4.0.downsample.1.weight is trainable ? False, device: cuda:0
>>> module module.layer4.0.downsample.1.bias is trainable ? False, device: cuda:0
>>> module module.layer4.1.conv1.weight is trainable ? False, device: cuda:0
>>> module module.layer4.1.bn1.weight is trainable ? False, device: cuda:0
>>> module module.layer4.1.bn1.bias is trainable ? False, device: cuda:0
>>> module module.layer4.1.conv2.weight is trainable ? False, device: cuda:0
>>> module module.layer4.1.bn2.weight is trainable ? False, device: cuda:0
>>> module module.layer4.1.bn2.bias is trainable ? False, device: cuda:0
>>> module module.layer4.1.conv3.weight is trainable ? False, device: cuda:0
>>> module module.layer4.1.bn3.weight is trainable ? False, device: cuda:0
>>> module module.layer4.1.bn3.bias is trainable ? False, device: cuda:0
>>> module module.layer4.2.conv1.weight is trainable ? False, device: cuda:0
>>> module module.layer4.2.bn1.weight is trainable ? False, device: cuda:0
>>> module module.layer4.2.bn1.bias is trainable ? False, device: cuda:0
>>> module module.layer4.2.conv2.weight is trainable ? False, device: cuda:0
>>> module module.layer4.2.bn2.weight is trainable ? False, device: cuda:0
>>> module module.layer4.2.bn2.bias is trainable ? False, device: cuda:0
>>> module module.layer4.2.conv3.weight is trainable ? False, device: cuda:0
>>> module module.layer4.2.bn3.weight is trainable ? False, device: cuda:0
>>> module module.layer4.2.bn3.bias is trainable ? False, device: cuda:0
>>> module module.hist.conv_centers.weight is trainable ? False, device: cuda:0
>>> module module.hist.conv_centers.bias is trainable ? False, device: cuda:0
>>> module module.hist.conv_widths.weight is trainable ? False, device: cuda:0
>>> module module.hist.conv_widths.bias is trainable ? False, device: cuda:0
>>> module module.bn.weight is trainable ? True, device: cuda:0
>>> module module.bn.bias is trainable ? True, device: cuda:0
>>> module module.classifier.weight is trainable ? True, device: cuda:0
>>> module module.classifier.bias is trainable ? True, device: cuda:0
==> Start training
Epoch1 Time:210.0s Data:1.4s Loss:3.6397 Xent:3.3167 Htri:0.3230 Acc:55.89% 
Epoch2 Time:210.3s Data:1.3s Loss:0.6947 Xent:0.4454 Htri:0.2494 Acc:92.78% 
Epoch3 Time:205.8s Data:1.3s Loss:0.3302 Xent:0.1190 Htri:0.2112 Acc:98.78% 
Epoch4 Time:207.0s Data:1.3s Loss:0.2623 Xent:0.0724 Htri:0.1899 Acc:99.28% 
Epoch5 Time:204.7s Data:1.3s Loss:0.2404 Xent:0.0600 Htri:0.1804 Acc:99.69% 
Epoch6 Time:204.6s Data:1.3s Loss:0.2261 Xent:0.0518 Htri:0.1744 Acc:99.79% 
Epoch7 Time:206.1s Data:1.3s Loss:0.2203 Xent:0.0501 Htri:0.1702 Acc:99.81% 
Epoch8 Time:208.2s Data:1.3s Loss:0.2185 Xent:0.0498 Htri:0.1687 Acc:99.92% 
Epoch9 Time:205.0s Data:1.3s Loss:0.2161 Xent:0.0512 Htri:0.1648 Acc:99.84% 
Epoch10 Time:205.4s Data:1.3s Loss:0.2163 Xent:0.0527 Htri:0.1636 Acc:99.81% 
==> Test
Extracted features for query set, obtained torch.Size([1980, 12288]) matrix
Extracted features for gallery set, obtained torch.Size([11310, 12288]) matrix
Extracting features complete in 3m 54s
Computing distance matrix
Computing CMC and mAP
Results ----------
top1:82.1% top5:91.9% top10:94.1% mAP:69.8%
------------------
Epoch11 Time:211.4s Data:1.3s Loss:0.2142 Xent:0.0530 Htri:0.1612 Acc:99.89% 
Epoch12 Time:207.2s Data:1.3s Loss:0.2109 Xent:0.0534 Htri:0.1575 Acc:99.88% 
Epoch13 Time:205.6s Data:1.2s Loss:0.2092 Xent:0.0539 Htri:0.1553 Acc:99.85% 
Epoch14 Time:205.3s Data:1.2s Loss:0.2044 Xent:0.0530 Htri:0.1514 Acc:99.85% 
Epoch15 Time:207.1s Data:1.2s Loss:0.2082 Xent:0.0552 Htri:0.1531 Acc:99.91% 
Epoch16 Time:207.9s Data:1.3s Loss:0.1981 Xent:0.0492 Htri:0.1489 Acc:99.91% 
Epoch17 Time:207.5s Data:1.2s Loss:0.2013 Xent:0.0537 Htri:0.1476 Acc:99.89% 
Epoch18 Time:208.5s Data:1.3s Loss:0.1968 Xent:0.0519 Htri:0.1449 Acc:99.87% 
Epoch19 Time:208.0s Data:1.3s Loss:0.1963 Xent:0.0513 Htri:0.1450 Acc:99.85% 
Epoch20 Time:206.8s Data:1.2s Loss:0.1909 Xent:0.0505 Htri:0.1404 Acc:99.88% 
==> Test
Extracted features for query set, obtained torch.Size([1980, 12288]) matrix
Extracted features for gallery set, obtained torch.Size([11310, 12288]) matrix
Extracting features complete in 3m 53s
Computing distance matrix
Computing CMC and mAP
Results ----------
top1:83.1% top5:93.3% top10:95.5% mAP:72.4%
------------------
Epoch21 Time:205.3s Data:1.3s Loss:0.1912 Xent:0.0507 Htri:0.1405 Acc:99.80% 
Epoch22 Time:208.1s Data:1.3s Loss:0.1877 Xent:0.0480 Htri:0.1398 Acc:99.88% 
Epoch23 Time:205.2s Data:1.2s Loss:0.1857 Xent:0.0466 Htri:0.1391 Acc:99.91% 
Epoch24 Time:206.6s Data:1.3s Loss:0.1840 Xent:0.0475 Htri:0.1366 Acc:99.80% 
Epoch25 Time:206.9s Data:1.2s Loss:0.1838 Xent:0.0482 Htri:0.1356 Acc:99.80% 
Epoch26 Time:207.0s Data:1.3s Loss:0.1797 Xent:0.0450 Htri:0.1347 Acc:99.85% 
Epoch27 Time:207.5s Data:1.3s Loss:0.1787 Xent:0.0458 Htri:0.1329 Acc:99.93% 
Epoch28 Time:207.5s Data:1.3s Loss:0.1825 Xent:0.0512 Htri:0.1313 Acc:99.79% 
Epoch29 Time:206.6s Data:1.3s Loss:0.1817 Xent:0.0486 Htri:0.1330 Acc:99.73% 
Epoch30 Time:207.7s Data:1.3s Loss:0.1769 Xent:0.0462 Htri:0.1307 Acc:99.87% 
==> Test
Extracted features for query set, obtained torch.Size([1980, 12288]) matrix
Extracted features for gallery set, obtained torch.Size([11310, 12288]) matrix
Extracting features complete in 3m 53s
Computing distance matrix
Computing CMC and mAP
Results ----------
top1:83.9% top5:93.9% top10:95.9% mAP:73.7%
------------------
Epoch31 Time:204.1s Data:1.3s Loss:0.1773 Xent:0.0472 Htri:0.1301 Acc:99.87% 
Epoch32 Time:204.3s Data:1.3s Loss:0.1788 Xent:0.0487 Htri:0.1301 Acc:99.83% 
Epoch33 Time:204.7s Data:1.3s Loss:0.1705 Xent:0.0445 Htri:0.1260 Acc:99.87% 
Epoch34 Time:207.3s Data:1.2s Loss:0.1738 Xent:0.0466 Htri:0.1273 Acc:99.81% 
Epoch35 Time:206.7s Data:1.3s Loss:0.1730 Xent:0.0476 Htri:0.1255 Acc:99.85% 
Epoch36 Time:208.5s Data:1.3s Loss:0.1761 Xent:0.0506 Htri:0.1255 Acc:99.76% 
Epoch37 Time:206.5s Data:1.3s Loss:0.1736 Xent:0.0478 Htri:0.1258 Acc:99.80% 
Epoch38 Time:207.0s Data:1.3s Loss:0.1666 Xent:0.0447 Htri:0.1218 Acc:99.89% 
Epoch39 Time:207.3s Data:1.3s Loss:0.1676 Xent:0.0453 Htri:0.1223 Acc:99.91% 
Epoch40 Time:205.2s Data:1.2s Loss:0.1669 Xent:0.0446 Htri:0.1223 Acc:99.93% 
==> Test
Extracted features for query set, obtained torch.Size([1980, 12288]) matrix
Extracted features for gallery set, obtained torch.Size([11310, 12288]) matrix
Extracting features complete in 3m 53s
Computing distance matrix
Computing CMC and mAP
Results ----------
top1:83.7% top5:94.2% top10:95.9% mAP:74.5%
------------------
Epoch41 Time:207.7s Data:1.3s Loss:0.1695 Xent:0.0484 Htri:0.1211 Acc:99.81% 
Epoch42 Time:208.3s Data:1.3s Loss:0.1711 Xent:0.0482 Htri:0.1230 Acc:99.81% 
Epoch43 Time:208.0s Data:1.3s Loss:0.1673 Xent:0.0463 Htri:0.1209 Acc:99.75% 
Epoch44 Time:204.5s Data:1.3s Loss:0.1693 Xent:0.0491 Htri:0.1202 Acc:99.79% 
Epoch45 Time:205.6s Data:1.2s Loss:0.1658 Xent:0.0456 Htri:0.1202 Acc:99.91% 
Epoch46 Time:206.3s Data:1.3s Loss:0.1697 Xent:0.0493 Htri:0.1204 Acc:99.77% 
Epoch47 Time:207.8s Data:1.3s Loss:0.1628 Xent:0.0425 Htri:0.1203 Acc:99.95% 
Epoch48 Time:208.5s Data:1.3s Loss:0.1678 Xent:0.0488 Htri:0.1191 Acc:99.81% 
Epoch49 Time:206.0s Data:1.3s Loss:0.1669 Xent:0.0467 Htri:0.1202 Acc:99.91% 
Epoch50 Time:206.6s Data:1.3s Loss:0.1636 Xent:0.0454 Htri:0.1182 Acc:99.91% 
==> Test
Extracted features for query set, obtained torch.Size([1980, 12288]) matrix
Extracted features for gallery set, obtained torch.Size([11310, 12288]) matrix
Extracting features complete in 3m 53s
Computing distance matrix
Computing CMC and mAP
Results ----------
top1:83.8% top5:94.1% top10:95.9% mAP:74.8%
------------------
Epoch51 Time:205.6s Data:1.3s Loss:0.1638 Xent:0.0462 Htri:0.1176 Acc:99.77% 
Epoch52 Time:207.8s Data:1.2s Loss:0.1702 Xent:0.0516 Htri:0.1186 Acc:99.61% 
Epoch53 Time:206.3s Data:1.3s Loss:0.1627 Xent:0.0467 Htri:0.1160 Acc:99.81% 
Epoch54 Time:206.4s Data:1.2s Loss:0.1592 Xent:0.0436 Htri:0.1156 Acc:99.89% 
Epoch55 Time:206.9s Data:1.3s Loss:0.1609 Xent:0.0454 Htri:0.1155 Acc:99.80% 
Epoch56 Time:204.3s Data:1.3s Loss:0.1625 Xent:0.0452 Htri:0.1174 Acc:99.89% 
Epoch57 Time:207.1s Data:1.3s Loss:0.1630 Xent:0.0455 Htri:0.1176 Acc:99.87% 
Epoch58 Time:208.9s Data:1.2s Loss:0.1608 Xent:0.0456 Htri:0.1152 Acc:99.89% 
Epoch59 Time:208.1s Data:1.3s Loss:0.1572 Xent:0.0423 Htri:0.1149 Acc:99.85% 
Epoch60 Time:204.8s Data:1.3s Loss:0.1583 Xent:0.0433 Htri:0.1151 Acc:99.91% 
==> Test
Extracted features for query set, obtained torch.Size([1980, 12288]) matrix
Extracted features for gallery set, obtained torch.Size([11310, 12288]) matrix
Extracting features complete in 3m 54s
Computing distance matrix
Computing CMC and mAP
Results ----------
top1:83.9% top5:94.0% top10:96.2% mAP:75.2%
------------------
Epoch61 Time:207.0s Data:1.3s Loss:0.1461 Xent:0.0305 Htri:0.1155 Acc:99.96% 
Epoch62 Time:207.2s Data:1.3s Loss:0.1473 Xent:0.0306 Htri:0.1167 Acc:99.96% 
Epoch63 Time:207.8s Data:1.3s Loss:0.1430 Xent:0.0288 Htri:0.1142 Acc:99.99% 
Epoch64 Time:208.2s Data:1.2s Loss:0.1459 Xent:0.0312 Htri:0.1147 Acc:99.92% 
Epoch65 Time:208.6s Data:1.3s Loss:0.1421 Xent:0.0298 Htri:0.1123 Acc:99.97% 
Epoch66 Time:207.1s Data:1.3s Loss:0.1475 Xent:0.0321 Htri:0.1154 Acc:99.96% 
Epoch67 Time:205.9s Data:1.2s Loss:0.1488 Xent:0.0339 Htri:0.1149 Acc:99.97% 
Epoch68 Time:204.5s Data:1.3s Loss:0.1462 Xent:0.0333 Htri:0.1129 Acc:99.92% 
Epoch69 Time:205.2s Data:1.3s Loss:0.1491 Xent:0.0348 Htri:0.1143 Acc:99.93% 
Epoch70 Time:205.5s Data:1.2s Loss:0.1515 Xent:0.0358 Htri:0.1157 Acc:99.93% 
==> Test
Extracted features for query set, obtained torch.Size([1980, 12288]) matrix
Extracted features for gallery set, obtained torch.Size([11310, 12288]) matrix
Extracting features complete in 3m 54s
Computing distance matrix
Computing CMC and mAP
Results ----------
top1:83.3% top5:93.9% top10:95.9% mAP:74.7%
------------------
Epoch71 Time:204.5s Data:1.3s Loss:0.1497 Xent:0.0362 Htri:0.1135 Acc:99.92% 
Epoch72 Time:207.4s Data:1.3s Loss:0.1522 Xent:0.0375 Htri:0.1148 Acc:99.88% 
Epoch73 Time:204.9s Data:1.3s Loss:0.1496 Xent:0.0355 Htri:0.1141 Acc:99.96% 
Epoch74 Time:208.7s Data:1.3s Loss:0.1514 Xent:0.0366 Htri:0.1147 Acc:99.93% 
Epoch75 Time:205.2s Data:1.3s Loss:0.1501 Xent:0.0361 Htri:0.1141 Acc:99.96% 
Epoch76 Time:206.5s Data:1.3s Loss:0.1486 Xent:0.0363 Htri:0.1123 Acc:99.95% 
Epoch77 Time:204.7s Data:1.3s Loss:0.1494 Xent:0.0363 Htri:0.1131 Acc:99.96% 
Epoch78 Time:204.6s Data:1.3s Loss:0.1458 Xent:0.0337 Htri:0.1121 Acc:100.00% 
Epoch79 Time:207.8s Data:1.3s Loss:0.1500 Xent:0.0361 Htri:0.1139 Acc:99.97% 
Epoch80 Time:205.7s Data:1.3s Loss:0.1519 Xent:0.0371 Htri:0.1147 Acc:99.95% 
==> Test
Extracted features for query set, obtained torch.Size([1980, 12288]) matrix
Extracted features for gallery set, obtained torch.Size([11310, 12288]) matrix
Extracting features complete in 3m 53s
Computing distance matrix
Computing CMC and mAP
Results ----------
top1:83.3% top5:94.0% top10:96.0% mAP:74.9%
------------------
Epoch81 Time:205.7s Data:1.3s Loss:0.1504 Xent:0.0369 Htri:0.1134 Acc:99.99% 
Epoch82 Time:204.9s Data:1.3s Loss:0.1488 Xent:0.0368 Htri:0.1120 Acc:100.00% 
Epoch83 Time:204.4s Data:1.3s Loss:0.1532 Xent:0.0392 Htri:0.1141 Acc:99.96% 
Epoch84 Time:207.0s Data:1.2s Loss:0.1507 Xent:0.0368 Htri:0.1138 Acc:99.92% 
Epoch85 Time:205.4s Data:1.3s Loss:0.1544 Xent:0.0396 Htri:0.1149 Acc:99.99% 
Epoch86 Time:206.4s Data:1.2s Loss:0.1533 Xent:0.0382 Htri:0.1151 Acc:99.96% 
Epoch87 Time:206.7s Data:1.3s Loss:0.1488 Xent:0.0367 Htri:0.1121 Acc:99.97% 
Epoch88 Time:206.0s Data:1.3s Loss:0.1464 Xent:0.0361 Htri:0.1103 Acc:99.99% 
Epoch89 Time:207.4s Data:1.3s Loss:0.1511 Xent:0.0394 Htri:0.1117 Acc:99.95% 
Epoch90 Time:208.0s Data:1.2s Loss:0.1491 Xent:0.0367 Htri:0.1123 Acc:99.96% 
==> Test
Extracted features for query set, obtained torch.Size([1980, 12288]) matrix
Extracted features for gallery set, obtained torch.Size([11310, 12288]) matrix
Extracting features complete in 3m 53s
Computing distance matrix
Computing CMC and mAP
Results ----------
top1:83.7% top5:93.9% top10:95.9% mAP:75.0%
------------------
Epoch91 Time:205.4s Data:1.3s Loss:0.1536 Xent:0.0397 Htri:0.1139 Acc:99.93% 
Epoch92 Time:208.2s Data:1.2s Loss:0.1500 Xent:0.0373 Htri:0.1127 Acc:99.95% 
Epoch93 Time:206.7s Data:1.3s Loss:0.1523 Xent:0.0399 Htri:0.1124 Acc:99.89% 
Epoch94 Time:205.1s Data:1.3s Loss:0.1535 Xent:0.0410 Htri:0.1126 Acc:99.91% 
Epoch95 Time:206.2s Data:1.3s Loss:0.1513 Xent:0.0388 Htri:0.1125 Acc:99.92% 
Epoch96 Time:204.3s Data:1.3s Loss:0.1518 Xent:0.0390 Htri:0.1129 Acc:99.96% 
Epoch97 Time:205.7s Data:1.2s Loss:0.1537 Xent:0.0397 Htri:0.1140 Acc:99.96% 
Epoch98 Time:203.1s Data:1.3s Loss:0.1523 Xent:0.0385 Htri:0.1137 Acc:99.95% 
Epoch99 Time:204.9s Data:1.3s Loss:0.1492 Xent:0.0378 Htri:0.1114 Acc:99.95% 
Epoch100 Time:208.2s Data:1.2s Loss:0.1485 Xent:0.0363 Htri:0.1122 Acc:99.97% 
==> Test
Extracted features for query set, obtained torch.Size([1980, 12288]) matrix
Extracted features for gallery set, obtained torch.Size([11310, 12288]) matrix
Extracting features complete in 3m 53s
Computing distance matrix
Computing CMC and mAP
Results ----------
top1:83.6% top5:94.0% top10:96.0% mAP:74.9%
------------------
Epoch101 Time:206.9s Data:1.3s Loss:0.1515 Xent:0.0379 Htri:0.1135 Acc:99.93% 
Epoch102 Time:205.3s Data:1.2s Loss:0.1482 Xent:0.0371 Htri:0.1112 Acc:99.96% 
Epoch103 Time:207.2s Data:1.2s Loss:0.1494 Xent:0.0368 Htri:0.1126 Acc:99.99% 
Epoch104 Time:208.3s Data:1.3s Loss:0.1507 Xent:0.0384 Htri:0.1123 Acc:99.92% 
Epoch105 Time:205.4s Data:1.3s Loss:0.1515 Xent:0.0379 Htri:0.1136 Acc:99.96% 
Epoch106 Time:205.6s Data:1.3s Loss:0.1536 Xent:0.0392 Htri:0.1144 Acc:99.97% 
Epoch107 Time:204.1s Data:1.2s Loss:0.1481 Xent:0.0368 Htri:0.1113 Acc:99.92% 
Epoch108 Time:204.8s Data:1.2s Loss:0.1491 Xent:0.0373 Htri:0.1118 Acc:99.95% 
Epoch109 Time:207.3s Data:1.3s Loss:0.1518 Xent:0.0386 Htri:0.1131 Acc:99.99% 
Epoch110 Time:208.7s Data:1.3s Loss:0.1502 Xent:0.0381 Htri:0.1121 Acc:99.96% 
==> Test
Extracted features for query set, obtained torch.Size([1980, 12288]) matrix
Extracted features for gallery set, obtained torch.Size([11310, 12288]) matrix
Extracting features complete in 3m 53s
Computing distance matrix
Computing CMC and mAP
Results ----------
top1:83.8% top5:94.1% top10:96.0% mAP:74.9%
------------------
Epoch111 Time:206.4s Data:1.3s Loss:0.1546 Xent:0.0418 Htri:0.1128 Acc:99.91% 
Epoch112 Time:205.4s Data:1.2s Loss:0.1510 Xent:0.0377 Htri:0.1132 Acc:99.96% 
Epoch113 Time:210.9s Data:1.3s Loss:0.1542 Xent:0.0406 Htri:0.1136 Acc:99.95% 
Epoch114 Time:212.5s Data:1.3s Loss:0.1518 Xent:0.0381 Htri:0.1137 Acc:99.97% 
Epoch115 Time:212.9s Data:1.3s Loss:0.1458 Xent:0.0370 Htri:0.1087 Acc:99.95% 
Epoch116 Time:211.5s Data:1.3s Loss:0.1515 Xent:0.0375 Htri:0.1140 Acc:99.96% 
Epoch117 Time:211.3s Data:1.3s Loss:0.1513 Xent:0.0378 Htri:0.1134 Acc:99.96% 
Epoch118 Time:210.9s Data:1.3s Loss:0.1500 Xent:0.0378 Htri:0.1122 Acc:99.96% 
Epoch119 Time:205.4s Data:1.3s Loss:0.1483 Xent:0.0369 Htri:0.1114 Acc:99.96% 
Epoch120 Time:206.1s Data:1.3s Loss:0.1503 Xent:0.0388 Htri:0.1115 Acc:99.95% 
==> Test
Extracted features for query set, obtained torch.Size([1980, 12288]) matrix
Extracted features for gallery set, obtained torch.Size([11310, 12288]) matrix
Extracting features complete in 3m 57s
Computing distance matrix
Computing CMC and mAP
Results ----------
top1:83.7% top5:94.1% top10:96.0% mAP:74.8%
------------------
Epoch121 Time:206.7s Data:1.3s Loss:0.1475 Xent:0.0348 Htri:0.1127 Acc:99.99% 
Epoch122 Time:213.9s Data:1.3s Loss:0.1488 Xent:0.0347 Htri:0.1142 Acc:99.96% 
Epoch123 Time:207.9s Data:1.3s Loss:0.1456 Xent:0.0347 Htri:0.1109 Acc:99.95% 
Epoch124 Time:203.6s Data:1.2s Loss:0.1462 Xent:0.0354 Htri:0.1107 Acc:99.93% 
Epoch125 Time:207.7s Data:1.3s Loss:0.1483 Xent:0.0367 Htri:0.1116 Acc:99.92% 
Epoch126 Time:206.2s Data:1.3s Loss:0.1440 Xent:0.0337 Htri:0.1103 Acc:99.99% 
Epoch127 Time:207.4s Data:1.2s Loss:0.1486 Xent:0.0362 Htri:0.1125 Acc:99.95% 
Epoch128 Time:208.1s Data:1.2s Loss:0.1479 Xent:0.0369 Htri:0.1110 Acc:99.93% 
Epoch129 Time:206.7s Data:1.3s Loss:0.1482 Xent:0.0367 Htri:0.1115 Acc:99.95% 
Epoch130 Time:206.8s Data:1.3s Loss:0.1489 Xent:0.0370 Htri:0.1118 Acc:99.95% 
==> Test
Extracted features for query set, obtained torch.Size([1980, 12288]) matrix
Extracted features for gallery set, obtained torch.Size([11310, 12288]) matrix
Extracting features complete in 3m 54s
Computing distance matrix
Computing CMC and mAP
Results ----------
top1:83.5% top5:94.1% top10:95.9% mAP:74.8%
------------------
Epoch131 Time:205.9s Data:1.3s Loss:0.1489 Xent:0.0369 Htri:0.1120 Acc:99.96% 
Epoch132 Time:208.7s Data:1.3s Loss:0.1489 Xent:0.0366 Htri:0.1123 Acc:99.96% 
Epoch133 Time:206.6s Data:1.2s Loss:0.1477 Xent:0.0355 Htri:0.1123 Acc:99.97% 
Epoch134 Time:206.5s Data:1.3s Loss:0.1476 Xent:0.0354 Htri:0.1121 Acc:99.97% 
Epoch135 Time:205.5s Data:1.2s Loss:0.1481 Xent:0.0357 Htri:0.1124 Acc:99.95% 
Epoch136 Time:208.4s Data:1.3s Loss:0.1452 Xent:0.0348 Htri:0.1104 Acc:100.00% 
Epoch137 Time:205.9s Data:1.3s Loss:0.1486 Xent:0.0375 Htri:0.1111 Acc:99.93% 
Epoch138 Time:204.6s Data:1.3s Loss:0.1491 Xent:0.0366 Htri:0.1124 Acc:99.93% 
Epoch139 Time:220.3s Data:1.2s Loss:0.1514 Xent:0.0380 Htri:0.1134 Acc:99.93% 
Epoch140 Time:211.4s Data:1.2s Loss:0.1473 Xent:0.0364 Htri:0.1109 Acc:99.95% 
==> Test
Extracted features for query set, obtained torch.Size([1980, 12288]) matrix
Extracted features for gallery set, obtained torch.Size([11310, 12288]) matrix
Extracting features complete in 3m 53s
Computing distance matrix
Computing CMC and mAP
Results ----------
top1:83.8% top5:94.0% top10:96.1% mAP:74.8%
------------------
Epoch141 Time:205.7s Data:1.3s Loss:0.1500 Xent:0.0365 Htri:0.1135 Acc:99.97% 
Epoch142 Time:206.4s Data:1.2s Loss:0.1483 Xent:0.0365 Htri:0.1118 Acc:99.91% 
Epoch143 Time:205.5s Data:1.3s Loss:0.1455 Xent:0.0350 Htri:0.1105 Acc:99.95% 
Epoch144 Time:206.8s Data:1.2s Loss:0.1468 Xent:0.0360 Htri:0.1107 Acc:99.95% 
Epoch145 Time:207.8s Data:1.2s Loss:0.1491 Xent:0.0356 Htri:0.1135 Acc:99.97% 
Epoch146 Time:205.3s Data:1.2s Loss:0.1502 Xent:0.0366 Htri:0.1136 Acc:99.91% 
Epoch147 Time:208.4s Data:1.3s Loss:0.1492 Xent:0.0368 Htri:0.1123 Acc:99.91% 
Epoch148 Time:206.2s Data:1.2s Loss:0.1491 Xent:0.0369 Htri:0.1122 Acc:99.89% 
Epoch149 Time:206.2s Data:1.3s Loss:0.1471 Xent:0.0366 Htri:0.1104 Acc:99.96% 
Epoch150 Time:204.4s Data:1.3s Loss:0.1488 Xent:0.0364 Htri:0.1124 Acc:99.92% 
==> Test
Extracted features for query set, obtained torch.Size([1980, 12288]) matrix
Extracted features for gallery set, obtained torch.Size([11310, 12288]) matrix
Extracting features complete in 3m 53s
Computing distance matrix
Computing CMC and mAP
Results ----------
top1:83.5% top5:94.0% top10:96.2% mAP:74.8%
------------------
Epoch151 Time:206.3s Data:1.3s Loss:0.1491 Xent:0.0370 Htri:0.1121 Acc:99.95% 
Epoch152 Time:208.8s Data:1.3s Loss:0.1468 Xent:0.0360 Htri:0.1108 Acc:99.97% 
Epoch153 Time:206.8s Data:1.3s Loss:0.1512 Xent:0.0378 Htri:0.1134 Acc:99.96% 
Epoch154 Time:207.0s Data:1.2s Loss:0.1495 Xent:0.0370 Htri:0.1125 Acc:99.96% 
Epoch155 Time:207.8s Data:1.3s Loss:0.1477 Xent:0.0357 Htri:0.1120 Acc:99.96% 
Epoch156 Time:205.3s Data:1.3s Loss:0.1474 Xent:0.0361 Htri:0.1113 Acc:99.96% 
Epoch157 Time:207.0s Data:1.2s Loss:0.1515 Xent:0.0379 Htri:0.1136 Acc:99.95% 
Epoch158 Time:204.8s Data:1.3s Loss:0.1491 Xent:0.0371 Htri:0.1121 Acc:99.95% 
Epoch159 Time:205.8s Data:1.3s Loss:0.1480 Xent:0.0356 Htri:0.1123 Acc:99.92% 
Epoch160 Time:208.2s Data:1.3s Loss:0.1472 Xent:0.0358 Htri:0.1114 Acc:99.95% 
==> Test
Extracted features for query set, obtained torch.Size([1980, 12288]) matrix
Extracted features for gallery set, obtained torch.Size([11310, 12288]) matrix
Extracting features complete in 3m 53s
Computing distance matrix
Computing CMC and mAP
Results ----------
top1:83.5% top5:94.0% top10:96.1% mAP:74.9%
------------------
Epoch161 Time:204.5s Data:1.2s Loss:0.1489 Xent:0.0375 Htri:0.1115 Acc:99.96% 
Epoch162 Time:207.2s Data:1.3s Loss:0.1495 Xent:0.0367 Htri:0.1127 Acc:99.96% 
Epoch163 Time:206.0s Data:1.3s Loss:0.1491 Xent:0.0363 Htri:0.1128 Acc:99.95% 
Epoch164 Time:208.7s Data:1.3s Loss:0.1495 Xent:0.0378 Htri:0.1116 Acc:99.89% 
Epoch165 Time:206.4s Data:1.3s Loss:0.1522 Xent:0.0376 Htri:0.1145 Acc:99.96% 
Epoch166 Time:205.9s Data:1.3s Loss:0.1489 Xent:0.0366 Htri:0.1123 Acc:99.95% 
Epoch167 Time:208.8s Data:1.2s Loss:0.1474 Xent:0.0365 Htri:0.1108 Acc:99.97% 
Epoch168 Time:206.4s Data:1.2s Loss:0.1499 Xent:0.0373 Htri:0.1126 Acc:99.93% 
Epoch169 Time:205.0s Data:1.3s Loss:0.1464 Xent:0.0353 Htri:0.1111 Acc:99.96% 
Epoch170 Time:205.4s Data:1.3s Loss:0.1515 Xent:0.0376 Htri:0.1139 Acc:99.95% 
==> Test
Extracted features for query set, obtained torch.Size([1980, 12288]) matrix
Extracted features for gallery set, obtained torch.Size([11310, 12288]) matrix
Extracting features complete in 3m 53s
Computing distance matrix
Computing CMC and mAP
Results ----------
top1:83.1% top5:93.9% top10:95.9% mAP:74.8%
------------------
Epoch171 Time:207.2s Data:1.2s Loss:0.1494 Xent:0.0361 Htri:0.1133 Acc:99.97% 
Epoch172 Time:206.6s Data:1.3s Loss:0.1484 Xent:0.0377 Htri:0.1106 Acc:99.91% 
Epoch173 Time:205.7s Data:1.3s Loss:0.1474 Xent:0.0362 Htri:0.1112 Acc:99.95% 
Epoch174 Time:207.4s Data:1.3s Loss:0.1489 Xent:0.0365 Htri:0.1124 Acc:99.96% 
Epoch175 Time:206.4s Data:1.3s Loss:0.1507 Xent:0.0377 Htri:0.1130 Acc:99.97% 
Epoch176 Time:207.2s Data:1.3s Loss:0.1508 Xent:0.0382 Htri:0.1126 Acc:99.93% 
Epoch177 Time:204.9s Data:1.3s Loss:0.1464 Xent:0.0354 Htri:0.1110 Acc:99.96% 
Epoch178 Time:207.2s Data:1.2s Loss:0.1501 Xent:0.0379 Htri:0.1123 Acc:99.96% 
Epoch179 Time:207.5s Data:1.3s Loss:0.1478 Xent:0.0365 Htri:0.1113 Acc:99.95% 
Epoch180 Time:207.3s Data:1.2s Loss:0.1439 Xent:0.0355 Htri:0.1084 Acc:99.97% 
==> Test
Extracted features for query set, obtained torch.Size([1980, 12288]) matrix
Extracted features for gallery set, obtained torch.Size([11310, 12288]) matrix
Extracting features complete in 3m 53s
Computing distance matrix
Computing CMC and mAP
Results ----------
top1:83.6% top5:93.9% top10:96.0% mAP:74.9%
------------------
Epoch181 Time:208.5s Data:1.3s Loss:0.1481 Xent:0.0359 Htri:0.1122 Acc:99.95% 
Epoch182 Time:204.8s Data:1.3s Loss:0.1519 Xent:0.0391 Htri:0.1127 Acc:99.93% 
Epoch183 Time:205.8s Data:1.2s Loss:0.1466 Xent:0.0362 Htri:0.1105 Acc:99.95% 
Epoch184 Time:206.1s Data:1.3s Loss:0.1497 Xent:0.0365 Htri:0.1132 Acc:99.99% 
Epoch185 Time:206.3s Data:1.3s Loss:0.1470 Xent:0.0355 Htri:0.1114 Acc:99.95% 
Epoch186 Time:207.9s Data:1.3s Loss:0.1496 Xent:0.0362 Htri:0.1134 Acc:99.99% 
Epoch187 Time:206.8s Data:1.3s Loss:0.1511 Xent:0.0383 Htri:0.1128 Acc:99.97% 
Epoch188 Time:207.0s Data:1.3s Loss:0.1464 Xent:0.0367 Htri:0.1098 Acc:99.96% 
Epoch189 Time:205.1s Data:1.3s Loss:0.1485 Xent:0.0352 Htri:0.1133 Acc:100.00% 
Epoch190 Time:206.3s Data:1.3s Loss:0.1514 Xent:0.0391 Htri:0.1123 Acc:99.91% 
==> Test
Extracted features for query set, obtained torch.Size([1980, 12288]) matrix
Extracted features for gallery set, obtained torch.Size([11310, 12288]) matrix
Extracting features complete in 3m 53s
Computing distance matrix
Computing CMC and mAP
Results ----------
top1:83.8% top5:94.0% top10:96.0% mAP:75.0%
------------------
Epoch191 Time:204.7s Data:1.3s Loss:0.1480 Xent:0.0362 Htri:0.1118 Acc:99.95% 
Epoch192 Time:208.4s Data:1.2s Loss:0.1481 Xent:0.0363 Htri:0.1118 Acc:99.96% 
Epoch193 Time:206.9s Data:1.3s Loss:0.1502 Xent:0.0378 Htri:0.1125 Acc:99.93% 
Epoch194 Time:204.6s Data:1.3s Loss:0.1500 Xent:0.0372 Htri:0.1128 Acc:99.97% 
Epoch195 Time:202.7s Data:1.3s Loss:0.1489 Xent:0.0372 Htri:0.1116 Acc:99.93% 
Epoch196 Time:206.0s Data:1.3s Loss:0.1481 Xent:0.0361 Htri:0.1121 Acc:99.96% 
Epoch197 Time:208.6s Data:1.3s Loss:0.1491 Xent:0.0368 Htri:0.1122 Acc:99.97% 
Epoch198 Time:204.0s Data:1.2s Loss:0.1453 Xent:0.0356 Htri:0.1098 Acc:99.97% 
Epoch199 Time:205.1s Data:1.2s Loss:0.1486 Xent:0.0368 Htri:0.1118 Acc:99.96% 
Epoch200 Time:206.4s Data:1.3s Loss:0.1491 Xent:0.0367 Htri:0.1124 Acc:99.93% 
==> Test
Extracted features for query set, obtained torch.Size([1980, 12288]) matrix
Extracted features for gallery set, obtained torch.Size([11310, 12288]) matrix
Extracting features complete in 3m 53s
Computing distance matrix
Computing CMC and mAP
Results ----------
top1:83.4% top5:94.0% top10:96.0% mAP:74.8%
------------------
Epoch201 Time:204.7s Data:1.3s Loss:0.1448 Xent:0.0345 Htri:0.1104 Acc:99.97% 
Epoch202 Time:206.8s Data:1.3s Loss:0.1519 Xent:0.0377 Htri:0.1142 Acc:99.97% 
Epoch203 Time:207.4s Data:1.3s Loss:0.1494 Xent:0.0373 Htri:0.1122 Acc:99.95% 
Epoch204 Time:205.7s Data:1.3s Loss:0.1476 Xent:0.0358 Htri:0.1118 Acc:99.93% 
Epoch205 Time:206.3s Data:1.3s Loss:0.1441 Xent:0.0339 Htri:0.1103 Acc:99.96% 
Epoch206 Time:206.7s Data:1.3s Loss:0.1500 Xent:0.0382 Htri:0.1118 Acc:99.95% 
Epoch207 Time:204.9s Data:1.3s Loss:0.1507 Xent:0.0373 Htri:0.1134 Acc:99.93% 
Epoch208 Time:206.2s Data:1.3s Loss:0.1513 Xent:0.0383 Htri:0.1130 Acc:99.92% 
Epoch209 Time:205.8s Data:1.3s Loss:0.1510 Xent:0.0391 Htri:0.1120 Acc:99.85% 
Epoch210 Time:204.0s Data:1.3s Loss:0.1502 Xent:0.0385 Htri:0.1118 Acc:99.97% 
==> Test
Extracted features for query set, obtained torch.Size([1980, 12288]) matrix
Extracted features for gallery set, obtained torch.Size([11310, 12288]) matrix
Extracting features complete in 3m 53s
Computing distance matrix
Computing CMC and mAP
Results ----------
top1:83.6% top5:93.9% top10:95.9% mAP:74.8%
------------------
Epoch211 Time:206.0s Data:1.3s Loss:0.1491 Xent:0.0369 Htri:0.1122 Acc:99.99% 
Epoch212 Time:205.5s Data:1.3s Loss:0.1509 Xent:0.0382 Htri:0.1127 Acc:99.91% 
Epoch213 Time:206.3s Data:1.2s Loss:0.1495 Xent:0.0374 Htri:0.1121 Acc:99.92% 
Epoch214 Time:207.2s Data:1.3s Loss:0.1507 Xent:0.0390 Htri:0.1116 Acc:99.95% 
Epoch215 Time:205.8s Data:1.2s Loss:0.1507 Xent:0.0389 Htri:0.1119 Acc:99.96% 
Epoch216 Time:209.6s Data:1.3s Loss:0.1458 Xent:0.0361 Htri:0.1097 Acc:99.95% 
Epoch217 Time:207.5s Data:1.3s Loss:0.1494 Xent:0.0371 Htri:0.1123 Acc:99.97% 
Epoch218 Time:206.9s Data:1.3s Loss:0.1440 Xent:0.0346 Htri:0.1094 Acc:99.96% 
Epoch219 Time:208.2s Data:1.2s Loss:0.1458 Xent:0.0348 Htri:0.1110 Acc:99.95% 
Epoch220 Time:207.9s Data:1.3s Loss:0.1504 Xent:0.0379 Htri:0.1125 Acc:99.91% 
==> Test
Extracted features for query set, obtained torch.Size([1980, 12288]) matrix
Extracted features for gallery set, obtained torch.Size([11310, 12288]) matrix
Extracting features complete in 3m 53s
Computing distance matrix
Computing CMC and mAP
Results ----------
top1:83.5% top5:94.1% top10:96.0% mAP:74.9%
------------------
Epoch221 Time:207.0s Data:1.2s Loss:0.1486 Xent:0.0360 Htri:0.1126 Acc:99.96% 
Epoch222 Time:207.8s Data:1.3s Loss:0.1521 Xent:0.0391 Htri:0.1130 Acc:99.95% 
Epoch223 Time:209.7s Data:1.2s Loss:0.1505 Xent:0.0385 Htri:0.1120 Acc:99.92% 
Epoch224 Time:206.8s Data:1.3s Loss:0.1469 Xent:0.0357 Htri:0.1112 Acc:99.93% 
Epoch225 Time:209.8s Data:1.3s Loss:0.1466 Xent:0.0355 Htri:0.1111 Acc:99.95% 
Epoch226 Time:204.1s Data:1.3s Loss:0.1460 Xent:0.0358 Htri:0.1101 Acc:99.96% 
Epoch227 Time:204.5s Data:1.3s Loss:0.1491 Xent:0.0377 Htri:0.1113 Acc:99.93% 
Epoch228 Time:207.5s Data:1.3s Loss:0.1491 Xent:0.0365 Htri:0.1126 Acc:99.97% 
Epoch229 Time:205.4s Data:1.3s Loss:0.1496 Xent:0.0378 Htri:0.1118 Acc:99.95% 
Epoch230 Time:203.9s Data:1.3s Loss:0.1473 Xent:0.0359 Htri:0.1114 Acc:99.96% 
==> Test
Extracted features for query set, obtained torch.Size([1980, 12288]) matrix
Extracted features for gallery set, obtained torch.Size([11310, 12288]) matrix
Extracting features complete in 3m 53s
Computing distance matrix
Computing CMC and mAP
Results ----------
top1:83.4% top5:94.0% top10:96.0% mAP:74.9%
------------------
Epoch231 Time:205.3s Data:1.2s Loss:0.1514 Xent:0.0384 Htri:0.1130 Acc:99.93% 
Epoch232 Time:206.1s Data:1.3s Loss:0.1505 Xent:0.0377 Htri:0.1128 Acc:99.92% 
Epoch233 Time:204.2s Data:1.2s Loss:0.1472 Xent:0.0367 Htri:0.1105 Acc:99.95% 
Epoch234 Time:205.7s Data:1.3s Loss:0.1480 Xent:0.0364 Htri:0.1116 Acc:99.97% 
Epoch235 Time:206.0s Data:1.3s Loss:0.1485 Xent:0.0379 Htri:0.1105 Acc:99.95% 
Epoch236 Time:207.3s Data:1.3s Loss:0.1477 Xent:0.0357 Htri:0.1119 Acc:99.97% 
Epoch237 Time:205.1s Data:1.3s Loss:0.1510 Xent:0.0386 Htri:0.1123 Acc:99.85% 
Epoch238 Time:206.4s Data:1.3s Loss:0.1529 Xent:0.0390 Htri:0.1138 Acc:99.99% 
Epoch239 Time:207.2s Data:1.3s Loss:0.1474 Xent:0.0359 Htri:0.1115 Acc:99.91% 
Epoch240 Time:208.6s Data:1.3s Loss:0.1488 Xent:0.0372 Htri:0.1116 Acc:99.97% 
==> Test
Extracted features for query set, obtained torch.Size([1980, 12288]) matrix
Extracted features for gallery set, obtained torch.Size([11310, 12288]) matrix
Extracting features complete in 3m 53s
Computing distance matrix
Computing CMC and mAP
Results ----------
top1:83.6% top5:94.0% top10:95.9% mAP:74.9%
------------------
==> Best Rank-1 83.9%, achieved at epoch 60
Finished. Total elapsed time (h:m:s): 18:12:08. Training time (h:m:s): 13:47:05.
